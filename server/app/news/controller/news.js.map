{
    "version": 3,
    "sources": [
        "../../../src/news/controller/news.js"
    ],
    "names": [
        "moment",
        "require",
        "fetchAction",
        "setCorsHeader",
        "where",
        "get",
        "model",
        "fetchNews",
        "news",
        "__this",
        "promise",
        "forEach",
        "item",
        "index",
        "push",
        "resolve",
        "reject",
        "news_id",
        "id",
        "select",
        "link",
        "cate",
        "cate_id",
        "data",
        "author_id",
        "user",
        "res",
        "all",
        "results",
        "map",
        "extra",
        "success",
        "delcateAction",
        "delete",
        "affectedRows",
        "addCateAction",
        "post",
        "console",
        "log",
        "removeAction",
        "addnewsAction",
        "now",
        "Date",
        "format",
        "title",
        "content",
        "pass",
        "think",
        "isEmpty",
        "update",
        "timeflag",
        "parseInt",
        "add",
        "header",
        "controller",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/news/controller/news.js",
    "sourcesContent": [
        "'use strict';\nlet moment = require('moment')\nexport default class extends think.controller.base {\n  async fetchAction(){\n  \tthis.setCorsHeader();\n    let where = this.get();\n  \tlet news = await this.model(`news`).fetchNews(where);\n    let __this = this;\n    let promise = [];\n    news.forEach(async (item,index)=>{          \n      promise.push(new Promise(async (resolve,reject)=>{    \n        let link = await __this.model(`news_cate`).where({news_id:item.id}).select();\n        link.forEach(async (item,index)=>{\n          let cate = \"cate\";          \n          let data = await __this.model(`category`).where({id:item.cate_id}).select()          \n              link[index][cate] = data[0]; \n        })\n        let user =await __this.model(`user`).where({id:item.author_id}).select();\n        let res = {\n          cate:link,\n          user: user[0]\n        }\n        resolve(res)\n      }))\n    });\n    let results = await Promise.all(promise);\n    news.map((item,index)=>{\n      let extra = 'extra';\n      return item[extra] = results[index]\n    })\n  \treturn this.success(news);\n  }\n  // 删除分类\n  async delcateAction(){\n    this.setCorsHeader();\n    let where = this.get();\n    let affectedRows = await this.model(`news_cate`).where(where).delete();\n  }\n\n  // 新增分类\n  async addCateAction(){\n    this.setCorsHeader();\n    let where = this.post();\n    console.log(where);\n  }\n\n  // 删除新闻\n  async removeAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);\n    let id = this.get(`id`);\n    let affectedRows = await model.where({id:id}).delete()\n    return this.success(affectedRows);\n  }\n  async addnewsAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);    \n    let where =  this.post();\n    let now =  moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\");\n    let {id,title,content,pass,extra} =where;\n    console.log(where);\n    if(!think.isEmpty(id)){\n      let affectedRows = model.where({id:id,}).update({title:title,timeflag:now,content: content,pass : parseInt(pass)});\n    }else{\n\n        let affectedRows = model.add({title:title,timeflag:now,content: content,pass : parseInt(pass),author_id:extra.user.id})\n    }\n    // else{\n    //   console.log(`新增`);\n    //   let affectedRows = model.add({title:title,timeflag:now,content: content,pass : parseInt(pass)})\n    // }\n\n    return this.success('addnews')\n\n  }\n  setCorsHeader(){\n    this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\n    this.header(\"Access-Control-Allow-Headers\", \"x-requested-with,Content-Type\");\n    this.header(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS,PUT,DELETE\");\n    this.header(\"Access-Control-Allow-Credentials\", \"true\");\n  }\n}"
    ]
}