{
    "version": 3,
    "sources": [
        "../../../src/news/controller/news.js"
    ],
    "names": [
        "moment",
        "require",
        "findlistsAction",
        "model",
        "join",
        "news",
        "on",
        "page",
        "countSelect",
        "success",
        "findAction",
        "where",
        "id",
        "user",
        "fieldReverse",
        "find",
        "categoryInstance",
        "controller",
        "action",
        "removeAction",
        "get",
        "delete",
        "affectedRows",
        "addnewsAction",
        "post",
        "title",
        "content",
        "pass",
        "top",
        "imageurl",
        "preview",
        "categories",
        "think",
        "isEmpty",
        "update",
        "Number",
        "add",
        "create_time",
        "now",
        "author_id",
        "res",
        "promise",
        "forEach",
        "item",
        "index",
        "push",
        "news_id",
        "cate_id",
        "all",
        "console",
        "log",
        "fail",
        "topAction",
        "datime",
        "utc",
        "format",
        "select",
        "untopAction",
        "updateclickAction",
        "clicked",
        "categorylistAction",
        "cate",
        "Date",
        "category",
        "json"
    ],
    "mappings": "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",
    "file": "../../../src/news/controller/news.js",
    "sourcesContent": [
        "'use strict'; \nlet moment = require('moment')\nimport Base from '../../common/base/base.js'\nexport default class extends Base{\n  async findlistsAction(){\n    let news = await this.model(`user`).join({\n      news:{\n        join:\"right\",\n        on:[\"id\",\"author_id\"],\n      }\n    }).page(this.page, 10)\n    .countSelect();\n    return this.success(news)\n  }\n  async findAction(){\n    let news = await this.model(`news`).where({\"news.id\":this.id}).join({\n        user:{\n          on:[\"author_id\",\"id\"]\n        }\n    }).fieldReverse(\"password,id\").find();\n    let categoryInstance = this.controller('category', 'category');\n    news[`categories`] = await this.action(categoryInstance,'find');\n    return this.success(news)\n  }\n\n  // 删除新闻\n  async removeAction(){\n    let model = this.model(`news`);\n    let id = this.get(`id`);\n    let affectedRows = await model.where({id:id}).delete()\n    return this.success(affectedRows);\n  }\n  async addnewsAction(){\n    let model = this.model(`news`);    \n    let news =  this.post();\n    // let now =  moment.utc(new Date()).format(\"YYYY-MM-DD\");\n    let {id,title,content,pass,top,imageurl,preview,user,categories} = news;\n    if(!think.isEmpty(id)){\n      let affectedRows = await model.where({id:id}).update({\n        title: title,\n        content: content,\n        pass : Number(pass),\n        top : Number(top),\n        imageurl: imageurl,\n        preview: preview\n      });\n      return this.success(`更新新闻成功`)\n\n    }else{\n        try{\n           let res = await model.add({\n            title: title,\n            create_time: this.now,\n            content: content,\n            pass : Number(pass),\n            top : Number(top),\n            author_id:user.id,\n            imageurl: imageurl,\n            preview: preview\n            });\n            let promise = []; \n        news.categories.forEach(async(item,index)=>{\n          await promise.push(this.model(`news_cate`).add({news_id:res,cate_id:item.id}));\n        })\n        Promise.all(promise);\n        return this.success(`添加新闻成功`)\n        }catch(err){\n            console.log(err)\n            return this.fail(err)\n        } \n      }\n  }\n  async topAction(){  \n    let news = this.model(`news`);\n    let datime = moment.utc(this.get(`date`)).format(`YYYY-MM-DD`)\n    let res = await news.where({create_time:datime,top:1}).select();\n        return this.success(res)\n  }\n  async untopAction(){\n    let news = this.model(`news`),\n        datime = moment.utc(this.get(`date`)).format(`YYYY-MM-DD`),\n        res = await news.where({create_time:datime,top:[\"!=\",1]}).select(); \n    return this.success(res)\n  }\n  async updateclickAction() {\n    let { id , clicked } = this.post()\n    let res = await this.model(`news`).where({id:id}).update({clicked:clicked})\n    return this.success(res)\n  }\n  async categorylistAction(){\n    let news = this.model(`news`),\n        cate = this.model(`category`),\n        where = {},\n        create_time = moment(this.get(`create_time`)||new Date()).format(`YYYY-MM-DD`);\n        if(this.id){\n          where = {\n            create_time: create_time,\n            \"cate_id\" : this.id\n          }\n        }else{\n          where = {\n            create_time: create_time,\n          }\n        }\n    let res = await this.model(`news_cate`).join({\n      news:{\n        on:[\"news_id\",\"news.id\"],\n      },\n      category:{\n        on:[\"cate_id\",\"category.id\"],\n      }\n    }).where(where).select();\n    return this.json(res)\n  }\n}"
    ]
}