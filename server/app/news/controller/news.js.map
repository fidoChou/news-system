{
    "version": 3,
    "sources": [
        "../../../src/news/controller/news.js"
    ],
    "names": [
        "moment",
        "require",
        "fetchAction",
        "setCorsHeader",
        "where",
        "get",
        "model",
        "fetchNews",
        "news",
        "__this",
        "promise",
        "data",
        "forEach",
        "item",
        "index",
        "push",
        "resolve",
        "reject",
        "newsid",
        "id",
        "select",
        "cmt",
        "user",
        "userid",
        "cmtuser",
        "news_id",
        "link",
        "cate",
        "cate_id",
        "author_id",
        "res",
        "comment",
        "all",
        "results",
        "map",
        "extra",
        "success",
        "delcateAction",
        "delete",
        "affectedRows",
        "addCateAction",
        "post",
        "console",
        "log",
        "removeAction",
        "addnewsAction",
        "now",
        "utc",
        "Date",
        "format",
        "title",
        "content",
        "pass",
        "top",
        "think",
        "isEmpty",
        "thenAdd",
        "update",
        "timeflag",
        "Number",
        "add",
        "parseInt",
        "resid",
        "fail",
        "topAction",
        "datime",
        "categorylistAction",
        "cates",
        "cateitem",
        "newsitem",
        "header",
        "controller",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/news/controller/news.js",
    "sourcesContent": [
        "'use strict'; \nlet moment = require('moment')\nexport default class extends think.controller.base {\n  async fetchAction(){\n  \tthis.setCorsHeader();\n    let where = this.get();\n  \tlet news = await this.model(`news`).fetchNews(where);\n    let __this = this;\n    let promise = [];\n    \n    news.data.forEach(async (item,index)=>{          \n      \n      promise.push(new Promise(async (resolve,reject)=>{            \n        // 查找评论\n        let cmt = await __this.model(`comments`).where({newsid:item.id}).select();\n\n        cmt.forEach(async (item,index)=>{\n          let user = `user`\n          let cmtuser = await __this.model(`user`).where({id:item.userid}).select();\n              cmt[index][user] = cmtuser[0];                 \n        })\n\n        //查找分类    \n        let link = await __this.model(`news_cate`).where({news_id:item.id}).select()\n        link.forEach(async (item,index)=>{\n          let cate = \"cate\";     \n          let data = await __this.model(`category`).where({id:item.cate_id}).select()          \n              link[index][cate] = data[0]; \n        })\n\n        \n        // 查找作者\n        let user =await __this.model(`user`).where({id:item.author_id}).select(); \n        \n\n        let res = {\n          cate:link,\n          user: user[0],\n          comment: cmt\n        }\n        resolve(res)\n      }))\n    });    \n    \n    let results = await Promise.all(promise);\n\n\n    news.data.map((item,index)=>{\n      let extra = 'extra';\n      return item[extra] = results[index]\n    })\n\n\n\n\n  \treturn this.success(news);\n  }\n  // 删除分类\n  async delcateAction(){\n    this.setCorsHeader();\n    let where = this.get();\n    let affectedRows = await this.model(`news_cate`).where(where).delete();\n  }\n\n  // 新增分类\n  async addCateAction(){\n    this.setCorsHeader();\n    let where = this.post();\n    console.log(where);\n  }\n  // 删除新闻\n  async removeAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);\n    let id = this.get(`id`);\n    let affectedRows = await model.where({id:id}).delete()\n    return this.success(affectedRows);\n  }\n  async addnewsAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);    \n    let where =  this.post();\n    let now =  moment.utc(new Date()).format(\"YYYY-MM-DD\");\n    let {id,title,content,pass,extra,top} = where;\n    let cate = this.model(`news_cate`);\n    if(!think.isEmpty(id)){\n      extra.cate.forEach(async (item,index)=>{\n        let affectedRows = await cate.thenAdd({news_id:id,cate_id:item.cate.id},{news_id:id,cate_id:item.cate.id})\n      })\n      let affectedRows = await model.where({id:id,}).update({\n        title: title,\n        timeflag: now,\n        content: content,\n        pass : Number(pass),\n        top : Number(top),\n      });\n      return this.success(`更新新闻成功`)\n\n    }else{\n        try{\n           await model.add({title:title,timeflag:now,content: content,pass : parseInt(pass),author_id:extra.user.id});\n            extra.cate.forEach(async (item,index)=>{\n              let affectedRows = await cate.add({news_id:resid,cate_id:item.cate.id})\n            }) \n           return this.success(`添加新闻成功`)\n        }catch(err){\n            return this.fail(err)\n        } \n      }\n  }\n  async topAction(){\n    this.setCorsHeader();\n    let news = this.model(`news`);\n    // console.log(moment(new Date()).format(\"YYYY-MM-DD\")+\"----moment---server now--------\");\n    // console.log(new Date()+\"Date-----------------NOW-----------\")\n    let datime = moment.utc(this.get(`date`)).format(`YYYY-MM-DD`)\n    // console.log(datime+\"-----------------\"+this.get(`date`))\n    let res = await news.where({timeflag:datime,top:1}).select();\n        return this.success(res)\n  }\n  async categorylistAction(){\n    this.setCorsHeader();\n    let {id} = this.get(),\n        news = this.model(`news`),\n        cate = this.model(`category`),\n        cates = [],promise = [],where = {}\n    if(id){\n      where = {\n        cate_id:id\n      }\n    }\n    cates = await this.model(`news_cate`).where(where).select();  \n    cates.forEach((item,index)=>{\n      promise.push(new Promise(async (resolve,reject)=>{\n        let cateitem = await cate.where({id:item.cate_id}).select();\n        let newsitem = await news.where({id:item.news_id}).select();\n        let res = {\n          cate : cateitem[0],\n          news: newsitem[0]\n        }\n        resolve(res)\n      }))    \n    })\n\n    let data =await Promise.all(promise);    \n    return this.success(data)\n  }\n  setCorsHeader(){\n    this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\n    this.header(\"Access-Control-Allow-Headers\", \"x-requested-with,Content-Type\");\n    this.header(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS,PUT,DELETE\");\n    this.header(\"Access-Control-Allow-Credentials\", \"true\");\n  }\n}"
    ]
}