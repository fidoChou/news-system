{
    "version": 3,
    "sources": [
        "../../../src/news/controller/news.js"
    ],
    "names": [
        "moment",
        "require",
        "fetchAction",
        "setCorsHeader",
        "where",
        "get",
        "model",
        "fetchNews",
        "news",
        "__this",
        "promise",
        "forEach",
        "item",
        "index",
        "push",
        "resolve",
        "reject",
        "news_id",
        "id",
        "select",
        "link",
        "cate",
        "cate_id",
        "data",
        "author_id",
        "user",
        "res",
        "all",
        "results",
        "map",
        "extra",
        "success",
        "delcateAction",
        "delete",
        "affectedRows",
        "addCateAction",
        "post",
        "console",
        "log",
        "removeAction",
        "addnewsAction",
        "now",
        "Date",
        "format",
        "title",
        "content",
        "pass",
        "think",
        "isEmpty",
        "add",
        "update",
        "timeflag",
        "Number",
        "parseInt",
        "resid",
        "categorylistAction",
        "cates",
        "cateitem",
        "newsitem",
        "header",
        "controller",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/news/controller/news.js",
    "sourcesContent": [
        "'use strict'; \nlet moment = require('moment')\nexport default class extends think.controller.base {\n  async fetchAction(){\n  \tthis.setCorsHeader();\n    let where = this.get();\n  \tlet news = await this.model(`news`).fetchNews(where);\n    let __this = this;\n    let promise = [];\n    \n    news.forEach(async (item,index)=>{          \n      promise.push(new Promise(async (resolve,reject)=>{    \n        let link = await __this.model(`news_cate`).where({news_id:item.id}).select();\n        link.forEach(async (item,index)=>{\n          let cate = \"cate\";          \n          let data = await __this.model(`category`).where({id:item.cate_id}).select()          \n              link[index][cate] = data[0]; \n        })\n        let user =await __this.model(`user`).where({id:item.author_id}).select();\n        let res = {\n          cate:link,\n          user: user[0]\n        }\n        resolve(res)\n      }))\n    });\n    \n    let results = await Promise.all(promise);\n    news.map((item,index)=>{\n      let extra = 'extra';\n      return item[extra] = results[index]\n    })\n  \treturn this.success(news);\n  }\n  // 删除分类\n  async delcateAction(){\n    this.setCorsHeader();\n    let where = this.get();\n    let affectedRows = await this.model(`news_cate`).where(where).delete();\n  }\n\n  // 新增分类\n  async addCateAction(){\n    this.setCorsHeader();\n    let where = this.post();\n    console.log(where);\n  }\n\n  // 删除新闻\n  async removeAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);\n    let id = this.get(`id`);\n    let affectedRows = await model.where({id:id}).delete()\n    return this.success(affectedRows);\n  }\n  async addnewsAction(){\n    this.setCorsHeader();\n    let model = this.model(`news`);    \n    let where =  this.post();\n    let now =  moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\");\n    let {id,title,content,pass,extra} =where;\n    let cate = this.model(`news_cate`);\n    \n\n    if(!think.isEmpty(id)){\n      console.log(`更行id`)\n      extra.cate.forEach(async (item,index)=>{\n        let affectedRows = await cate.add({news_id:id,cate_id:item.cate.id})\n      })\n\n      let affectedRows = await model.where({id:id,}).update({title:title,timeflag:now,content: content,pass : Number(pass)});\n\n    }else{\n\n        let resid = await model.add({title:title,timeflag:now,content: content,pass : parseInt(pass),author_id:extra.user.id})  \n        extra.cate.forEach(async (item,index)=>{\n\n          let affectedRows = await cate.add({news_id:resid,cate_id:item.cate.id})\n        })\n    }\n\n    return this.success('addnews')\n\n  }\n  async categorylistAction(){\n    this.setCorsHeader();\n    let {id} = this.get();\n    let news = this.model(`news`);\n    let cate = this.model(`category`);\n    let cates = [];\n    let where = {}\n    if(id){\n      where = {\n        cate_id:id\n      }\n    }\n    cates = await this.model(`news_cate`).where(where).select();  \n    console.log(cates)\n    \n\n    let promise = [];    \n    cates.forEach((item,index)=>{\n      promise.push(new Promise(async (resolve,reject)=>{\n        let cateitem = await cate.where({id:item.cate_id}).select();\n        let newsitem = await news.where({id:item.news_id}).select();\n        let res = {\n          cate : cateitem[0],\n          news: newsitem[0]\n        }\n        resolve(res)\n      }))    \n    })\n\n    let data =await Promise.all(promise);    \n    return this.success(data)\n  }\n  setCorsHeader(){\n    this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\n    this.header(\"Access-Control-Allow-Headers\", \"x-requested-with,Content-Type\");\n    this.header(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS,PUT,DELETE\");\n    this.header(\"Access-Control-Allow-Credentials\", \"true\");\n  }\n}"
    ]
}