{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/user.js"
    ],
    "names": [
        "fs",
        "require",
        "path",
        "moment",
        "util",
        "indexAction",
        "setCorsHeader",
        "model",
        "select",
        "data",
        "success",
        "fetchuserAction",
        "where",
        "get",
        "json",
        "loginAction",
        "post",
        "think",
        "isEmpty",
        "fail",
        "errorno",
        "addAction",
        "method",
        "http",
        "toLowerCase",
        "end",
        "params",
        "id",
        "file",
        "user",
        "now",
        "Date",
        "format",
        "update",
        "createTime",
        "affectedRows",
        "add",
        "removeAction",
        "parseSql",
        "sql",
        "res",
        "console",
        "log",
        "header",
        "controller",
        "base"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;;;;;;;;;;AAGE;;;;mBAIMI,W;;;;;;;AACJ,mBAAKC,aAAL;;qBACiB,KAAKC,KAAL,SAAmBC,MAAnB,E;;;AAAbC,kB;+CACG,KAAKC,OAAL,CAAaD,IAAb,C;;;;;;;;;;;;;;;;;mBAEHE,e;;;;;;;AACJ,mBAAKL,aAAL;AACIM,mB,GAAQ,KAAKC,GAAL,E;;qBACI,KAAKN,KAAL,SAAmBK,KAAnB,CAAyBA,KAAzB,EAAgCJ,MAAhC,E;;;AAAZC,kB;gDAEG,KAAKK,IAAL,CAAU,EAACL,MAAKA,IAAN,EAAV,C;;;;;;;;;;;;;;;;;mBAEHM,W;;;;;;;AACEH,mB,GAAQ,KAAKI,IAAL,E;;qBACI,KAAKT,KAAL,SAAmBK,KAAnB,CAAyBA,KAAzB,EAAgCJ,MAAhC,E;;;AAAZC,kB;;mBACDQ,MAAMC,OAAN,CAAcT,IAAd,C;;;;;gDACM,KAAKU,IAAL,CAAU,EAACC,SAAQ,CAAC,CAAV,EAAV,EAAuB,UAAvB,C;;;gDAGA,KAAKV,OAAL,CAAaD,IAAb,C;;;;;;;;;;;;;;;;;mBAGPY,S;;;;;;;;AACAC,oB,GAAS,KAAKC,IAAL,CAAUD,MAAV,CAAiBE,WAAjB,E;;oBACVF,WAAW,S;;;;;AACZ,mBAAKhB,aAAL;AACA,mBAAKmB,GAAL;;;;;AAGIlB,mB,GAAQ,KAAKA,KAAL,Q;AACRmB,oB,GAAS,KAAKV,IAAL,E;AACTW,gB,GAAK,KAAKX,IAAL,M;AACLY,kB,GAAO,yBAAe,KAAKZ,IAAL,QAAf,C;AACPa,kB,GAAO,KAAKtB,KAAL,Q;AACPuB,iB,GAAO3B,OAAO,IAAI4B,IAAJ,EAAP,EAAmBC,MAAnB,CAA0B,qBAA1B,C;;AACX,mBAAK1B,aAAL;;kBACIW,MAAMC,OAAN,CAAcS,EAAd,C;;;;;;qBACuBE,KAAKjB,KAAL,CAAW,EAACe,IAAGA,EAAJ,EAAX,EAAoBM,MAApB,CAA2B,sBAAcP,MAAd,EAAqB,EAACE,MAAKA,IAAN,EAArB,EAAiC,EAACM,YAAWJ,GAAZ,EAAjC,CAA3B,C;;;AAArBK,0B;gDACG,KAAKzB,OAAL,CAAayB,YAAb,C;;;;qBAGkBN,KAAKO,GAAL,CAAS,sBAAcV,MAAd,EAAqB,EAACE,MAAKA,IAAN,EAArB,EAAiC,EAACM,YAAWJ,GAAZ,EAAjC,CAAT,C;;;AAArBK,2B;gDACG,KAAKzB,OAAL,CAAayB,aAAb,C;;;;;;;;;;;;;;;;;mBAIPE,Y;;;;;;;AACAV,gB,GAAK,KAAKd,GAAL,M;AACLN,mB,GAAO,KAAKA,KAAL,Q;;qBACKA,MAAM+B,QAAN,CAAeC,GAAf,EAAmBZ,EAAnB,EAAsBA,EAAtB,EAAyBA,EAAzB,C;;;AAAZa,iB;;AACJC,sBAAQC,GAAR,CAAYF,GAAZ;AACA;AACA;;;;;;;;;;;;;;;;;mBAKFlC,a,4BAAe;AACb,SAAKqC,MAAL,CAAY,6BAAZ,EAA2C,KAAKA,MAAL,CAAY,QAAZ,KAAyB,GAApE;AACA,SAAKA,MAAL,CAAY,8BAAZ,EAA4C,+BAA5C;AACA,SAAKA,MAAL,CAAY,8BAAZ,EAA4C,6BAA5C;AACA,SAAKA,MAAL,CAAY,kCAAZ,EAAgD,MAAhD;AACD,G;;;EAnE0B1B,MAAM2B,UAAN,CAAiBC,I",
    "file": "../../../src/admin/controller/user.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from '../../common/base/base.js';\nvar fs = require('fs');\nvar path = require('path');\nlet moment = require('moment')\nlet util = require('util')\n\nexport default class extends think.controller.base {\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction() {\n    this.setCorsHeader()\n    let data = await this.model(`user`).select();\n    return this.success(data)\n  }\n  async fetchuserAction(){\n    this.setCorsHeader();\n    let where = this.get();\n    let data =await this.model(`user`).where(where).select();\n\n    return this.json({data:data})\n  }\n  async loginAction() {  \n      let where = this.post();      \n      let data =await this.model(`user`).where(where).select();\n      if(think.isEmpty(data)){\n        return this.fail({errorno:-1},\"用户名或密码错误\")  \n      }\n      else{\n        return this.success(data)\n      }\n  }\n  async addAction(){\n    let method = this.http.method.toLowerCase();\n    if(method === 'options'){\n      this.setCorsHeader()\n      this.end();\n    }\n    else{  \n      let model = this.model(`user`);\n      let params = this.post();\n      let id = this.post(`id`);\n      let file = JSON.stringify(this.post(`file`));\n      let user = this.model(`user`);\n      let now =  moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\");\n      this.setCorsHeader();\n      if(!think.isEmpty(id)){\n        let affectedRows = await user.where({id:id}).update(Object.assign(params,{file:file},{createTime:now}));\n        return this.success(affectedRows);\n      }\n      else{\n        let affectedRows = await user.add(Object.assign(params,{file:file},{createTime:now}));\n        return this.success(affectedRows);\n      }\n    }\n  }\n  async removeAction(){\n    let id = this.get(`id`);\n    let model= this.model(`user`)\n    let res = await model.parseSql(sql,id,id,id);\n    console.log(res);\n    // let del = await model.execute(res)\n    // console.log(del);  \n    \n  }\n\n\n  setCorsHeader(){\n    this.header(\"Access-Control-Allow-Origin\", this.header(\"origin\") || \"*\");\n    this.header(\"Access-Control-Allow-Headers\", \"x-requested-with,Content-Type\");\n    this.header(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS,PUT,DELETE\");\n    this.header(\"Access-Control-Allow-Credentials\", \"true\");\n  }\n}\n"
    ]
}